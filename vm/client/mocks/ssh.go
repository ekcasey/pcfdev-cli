// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/pivotal-cf/pcfdev-cli/vm/client (interfaces: SSH)

package mocks

import (
	gomock "github.com/golang/mock/gomock"
	ssh "github.com/pivotal-cf/pcfdev-cli/ssh"
	time "time"
)

// Mock of SSH interface
type MockSSH struct {
	ctrl     *gomock.Controller
	recorder *_MockSSHRecorder
}

// Recorder for MockSSH (not exported)
type _MockSSHRecorder struct {
	mock *MockSSH
}

func NewMockSSH(ctrl *gomock.Controller) *MockSSH {
	mock := &MockSSH{ctrl: ctrl}
	mock.recorder = &_MockSSHRecorder{mock}
	return mock
}

func (_m *MockSSH) EXPECT() *_MockSSHRecorder {
	return _m.recorder
}

func (_m *MockSSH) WithSSHTunnel(_param0 string, _param1 []ssh.SSHAddress, _param2 []byte, _param3 time.Duration, _param4 func(string)) error {
	ret := _m.ctrl.Call(_m, "WithSSHTunnel", _param0, _param1, _param2, _param3, _param4)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockSSHRecorder) WithSSHTunnel(arg0, arg1, arg2, arg3, arg4 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "WithSSHTunnel", arg0, arg1, arg2, arg3, arg4)
}
